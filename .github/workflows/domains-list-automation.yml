name: Domains Automation and Comparison

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'
  push:
    paths:
      - 'domains.lst'

jobs:
  process-and-compare-domains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y wget grep

      - name: Clean domains.lst
        run: |
          if [[ -f domains.lst ]]; then
            sed -i '/^\s*$/d; /^\s*[#;\/]\//d; /^\s*--/d' domains.lst
            echo "domains.lst очищен."
          else
            echo "domains.lst отсутствует." && exit 1
          fi

      - name: Sort domains.lst
        run: |
          [[ -f domains.lst ]] && LC_COLLATE=C sort -f -u domains.lst -o domains.lst

      - name: Remove 'www.' from domains
        run: |
          [[ -f domains.lst ]] && sed -i 's/^www\.//g' domains.lst

      - name: Filter subdomains in-place
        run: |
          if [[ -f domains.lst ]]; then
            get_parents() {
              local domain=$1
              local parents=()
              while [[ $domain == *.* ]]; do
                domain=${domain#*.}
                parents+=("$domain")
              done
              echo "${parents[@]}"
            }

            mapfile -t domains < domains.lst
            IFS=$'\n' sorted=($(printf '%s\n' "${domains[@]}" \
              | awk -F. '{print NF-1, $0}' \
              | sort -n \
              | cut -d' ' -f2-))
            unset IFS

            declare -A kept
            > filtered_domains.txt

            for domain in "${sorted[@]}"; do
              skip=false
              for p in $(get_parents "$domain"); do
                if [[ ${kept["$p"]+1} ]]; then
                  skip=true
                  break
                fi
              done
              $skip || { echo "$domain" >> filtered_domains.txt; kept["$domain"]=1; }
            done

            sort -u filtered_domains.txt -o domains.lst
            rm -f filtered_domains.txt
            echo "Поддомены отфильтрованы."
          fi

      - name: Generate domains-nekobox.lst
        run: |
          [[ -f domains.lst ]] && sed 's/^/domain:/' domains.lst | sort -u > domains-nekobox.lst

      - name: Prepare and compare domain lists
        run: |
          declare -A sources=(
            ["RussiaInside"]="https://raw.githubusercontent.com/itdoginfo/allow-domains/main/Russia/inside-raw.lst"
            ["CommunityFilter"]="https://raw.githubusercontent.com/1andrevich/Re-filter-lists/refs/heads/main/community.lst"
          )

          mkdir -p categories/Compared-Domains
          rm -f categories/Compared-Domains/missing-domains.txt categories/Compared-Domains/presence-domains.txt
          touch categories/Compared-Domains/missing-domains.txt categories/Compared-Domains/presence-domains.txt

          cp domains.lst my-domains.lst

          has_parent_in_list() {
            local domain=$1 list=$2
            while [[ $domain == *.* ]]; do
              domain=${domain#*.}
              grep -qx "$domain" "$list" && return 0
            done
            return 1
          }

          compare_source() {
            local name=$1 url=$2 file="${name,,}.lst"
            wget -q -O "$file" "$url" || { echo "Не удалось загрузить $file"; exit 1; }

            touch "missing_${name,,}.txt" "presence_${name,,}.txt"

            while IFS= read -r domain; do
              [[ -z $domain ]] && continue
              if ! grep -qx "$domain" my-domains.lst && ! has_parent_in_list "$domain" my-domains.lst; then
                echo "$domain" >> "missing_${name,,}.txt"
              fi
            done < "$file"

            while IFS= read -r domain; do
              [[ -z $domain ]] && continue
              if ! grep -qx "$domain" "$file" && ! has_parent_in_list "$domain" "$file"; then
                echo "$domain" >> "presence_${name,,}.txt"
              fi
            done < my-domains.lst

            sort -u "missing_${name,,}.txt" -o "missing_${name,,}.txt"
            sort -u "presence_${name,,}.txt" -o "presence_${name,,}.txt"

            grep -v '\.ua$' "missing_${name,,}.txt" > tmp && mv tmp "missing_${name,,}.txt"
            grep -v '\.ua$' "presence_${name,,}.txt" > tmp && mv tmp "presence_${name,,}.txt"
          }

          for name in "${!sources[@]}"; do
            compare_source "$name" "${sources[$name]}"
          done

          {
            for name in "${!sources[@]}"; do
              echo "### missing $name"
              echo
              cat "missing_${name,,}.txt"
              echo
            done
          } > categories/Compared-Domains/missing-domains.txt

          {
            for name in "${!sources[@]}"; do
              echo "### presence $name"
              echo
              cat "presence_${name,,}.txt"
              echo
            done
          } > categories/Compared-Domains/presence-domains.txt

          rm -f *.lst missing_*.txt presence_*.txt my-domains.lst tmp

          echo "Сравнение завершено."

      - name: Generate domains-without-yt.lst
        run: |
          exclude_file="categories/Services/youtube/youtube-domains.lst"
          if [[ -f "$exclude_file" && -f domains.lst ]]; then
            grep -vxFf "$exclude_file" domains.lst | sort -u > domains-without-yt.lst
          else
            echo "Файл $exclude_file отсутствует или domains.lst отсутствует — пропускаем генерацию."
          fi

      - name: Commit and push .lst changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add domains.lst domains-nekobox.lst domains-without-yt.lst
          git commit -m "Обновление доменных .lst файлов" || echo "Нет изменений для коммита"
          git push origin main

      - name: Commit and push Compared-Domains changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add categories/Compared-Domains/missing-domains.txt categories/Compared-Domains/presence-domains.txt
          git commit -m "Автоматическое сравнение: $(date +'%Y-%m-%d')" || echo "Нет изменений для коммита"
          git push origin main
