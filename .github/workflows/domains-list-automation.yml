name: Domains Automation and Comparison

on:
  schedule:
    - cron: '0 10 * * *'
  push:
    paths:
      - 'domains.lst'
      - 'sources/sources-domains.txt'

jobs:
  process-and-compare-domains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y wget grep moreutils

      - name: Clean domains.lst
        run: |
          sed -i '/^[[:space:]]*#/d; /^;/d; /^\/\//d; /^[[:space:]]*--/d' domains.lst
          sed -i 's/^full://g; s|^https\?://||g; s|^//||g' domains.lst
          sed -i 's|/.*$||g; s|:.*$||g; s|^www[2-9]\?\.||g' domains.lst
          sed -i 's/^[[:space:]]*//; s/[[:space:]]*$//; /^$/d' domains.lst

      - name: Sort domains.lst
        run: LC_COLLATE=C sort -f -u domains.lst -o domains.lst

      - name: Filter subdomains in domains.lst
        run: |
          get_parents() {
            local d=$1
            while [[ $d == *.* ]]; do
              d=${d#*.}
              echo "$d"
            done
          }
          mapfile -t all < domains.lst
          IFS=$'\n' sorted=($(printf '%s\n' "${all[@]}" |
            awk -F. '{print NF-1, $0}' | sort -n | cut -d' ' -f2-))
          declare -A keep; > filtered.txt
          for dom in "${sorted[@]}"; do
            skip=
            for p in $(get_parents "$dom"); do
              [[ ${keep[$p]} ]] && { skip=1; break; }
            done
            [[ $skip ]] || { echo "$dom" >> filtered.txt; keep[$dom]=1; }
          done
          sort -u filtered.txt -o domains.lst
          rm filtered.txt

      - name: Generate NekoBox list
        run: sed 's/^/domain:/' domains.lst | sort -u > domains-nekobox.lst

      - name: Compare with external sources
        run: |
          # normalize and sort
          normalize() {
            sed -i 's/^full://g; s|^https\?://||g; s|^//||g' "$1"
            sed -i 's|/.*$||g; s|:.*$||g; s|^www[2-9]\?\.||g' "$1"
            sed -i 's/^[[:space:]]*//; s/[[:space:]]*$//; /^$/d' "$1"
            sort -u "$1" -o "$1"
          }

          # load parent domains into P[]
          declare -A P
          while read -r d; do P["$d"]=1; done < domains.lst

          mkdir -p categories/Compared-Domains
          cp domains.lst my-domains.lst
          normalize my-domains.lst

          declare -A S
          while IFS= read -r ln; do
            [[ "$ln" =~ ^#|^$ ]] && continue
            url=${ln// /}
            key=$(basename "$url" | sed 's/\.[^.]*$//')
            S["$key"]="$url"
          done < sources/sources-domains.txt

          for key in "${!S[@]}"; do
            url=${S[$key]}
            wget -qO "$key.lst" "$url" || continue
            normalize "$key.lst"

            # filter out subdomains whose parent exists in domains.lst
            get_parents() {
              local d=$1
              while [[ $d == *.* ]]; do
                d=${d#*.}
                echo "$d"
              done
            }
            > tmp.lst
            while read -r d; do
              skip=
              for p in $(get_parents "$d"); do
                [[ ${P[$p]} ]] && { skip=1; break; }
              done
              [[ $skip ]] || echo "$d"
            done < "$key.lst" > tmp.lst
            mv tmp.lst "$key.lst"

            # compare, exclude .ua
            comm -23 <(sort "$key.lst") <(sort my-domains.lst) | grep -v '\.ua$' > missing_"$key".txt
            comm -13 <(sort "$key.lst") <(sort my-domains.lst) | grep -v '\.ua$' > presence_"$key".txt
          done

          {
            for key in "${!S[@]}"; do
              echo "### Missing in $key ###"
              cat missing_"$key".txt
              echo
            done
          } > categories/Compared-Domains/missing-domains.txt

          {
            for key in "${!S[@]}"; do
              echo "### Present only in $key ###"
              cat presence_"$key".txt
              echo
            done
          } > categories/Compared-Domains/presence-domains.txt

      - name: Generate domains without YouTube
        run: |
          yt="categories/Services/youtube/youtube-domains.lst"
          [[ -f "$yt" && -f domains.lst ]] && grep -vxFf "$yt" domains.lst > domains-without-yt.lst

      - name: Commit and push .lst changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          for f in domains.lst domains-nekobox.lst domains-without-yt.lst; do
            [[ -f $f ]] && git add "$f"
          done
          git commit -m "Обновление доменных .lst файлов" || echo "Нет изменений для коммита"
          git push origin main

      - name: Commit and push Compared-Domains changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          for f in categories/Compared-Domains/missing-domains.txt categories/Compared-Domains/presence-domains.txt; do
            [[ -f $f ]] && git add "$f"
          done
          git commit -m "Автоматическое сравнение: $(date +'%Y-%m-%d')" || echo "Нет изменений для коммита"
          git push origin main