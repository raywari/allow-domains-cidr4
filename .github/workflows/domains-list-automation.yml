name: Domains Automation and Comparison

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'
  push:
    paths:
      - 'domains.lst'
      - 'sources/sources-domains.txt'
      - '.github/workflows/domains-automation.yml'

jobs:
  process-and-compare-domains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y wget grep moreutils

      - name: Clean domains.lst
        run: |
          sed -i '/^[[:space:]]*#/d; /^;/d; /^\/\//d; /^[[:space:]]*--/d' domains.lst
          sed -i 's/^full://g; s|^https\?://||g; s|^//||g' domains.lst
          sed -i 's|/.*$||g; s|:.*$||g; s|^www[2-9]\?\.||g' domains.lst
          sed -i 's/^[[:space:]]*//; s/[[:space:]]*$//; /^$/d' domains.lst
          echo "domains.lst –æ—á–∏—â–µ–Ω –∏ –≥–æ—Ç–æ–≤."

      - name: Sort domains.lst
        run: LC_COLLATE=C sort -f -u domains.lst -o domains.lst

      - name: Filter subdomains
        run: |
          get_parents() {
            local d=$1
            while [[ $d == *.* ]]; do
              d=${d#*.}
              echo "$d"
            done
          }
          mapfile -t all < domains.lst
          IFS=$'\n' sorted=($(printf '%s\n' "${all[@]}" | awk -F. '{print NF-1, $0}' | sort -n | cut -d' ' -f2-))
          declare -A keep; > filtered.txt
          for dom in "${sorted[@]}"; do
            skip=
            for p in $(get_parents "$dom"); do
              [[ ${keep[$p]} ]] && { skip=1; break; }
            done
            [[ $skip ]] || { echo "$dom" >> filtered.txt; keep[$dom]=1; }
          done
          sort -u filtered.txt -o domains.lst
          rm filtered.txt
          echo "–°—É–±–¥–æ–º–µ–Ω—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã."

      - name: Generate NekoBox list
        run: sed 's/^/domain:/' domains.lst | sort -u > domains-nekobox.lst

      - name: Compare with external sources (debug)
        run: |
          normalize() {
            sed -i 's/^full://g; s|^https\?://||g; s|^//||g' "$1"
            sed -i 's|/.*$||g; s|:.*$||g; s|^www[2-9]\?\.||g' "$1"
            sed -i 's/^[[:space:]]*//; s/[[:space:]]*$//; /^$/d' "$1"
            sort -u "$1" -o "$1"
          }

          [[ -f sources/sources-domains.txt ]] || { echo "‚ùå sources-domains.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"; exit 1; }
          mkdir -p categories/Compared-Domains

          cp domains.lst my-domains.lst
          normalize my-domains.lst

          declare -A SRC
          while read -r line; do
            [[ "$line" =~ ^#|^$ ]] && continue
            url=${line// /}
            key=$(basename "$url" | sed 's/\.[^.]*$//')
            SRC[$key]=$url
          done < sources/sources-domains.txt

          for key in "${!SRC[@]}"; do
            url=${SRC[$key]}
            echo -e "\n=== üëâ Source: $key ($url) ==="

            wget -qO "${key}.lst" "$url" || { echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å $url"; continue; }
            echo "–¥–æ –æ—á–∏—Å—Ç–∫–∏: $(wc -l < "${key}.lst") —Å—Ç—Ä–æ–∫"

            normalize "${key}.lst"
            echo "–ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: $(wc -l < "${key}.lst") —Å—Ç—Ä–æ–∫"
            echo "my-domains.lst: $(wc -l < my-domains.lst) —Å—Ç—Ä–æ–∫"

            echo "-- –ø–µ—Ä–≤—ã–µ 5 ${key}.lst --"; head -n5 "${key}.lst"
            echo "-- –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 ${key}.lst --"; tail -n5 "${key}.lst"

            comm -23 <(sort "${key}.lst") <(sort my-domains.lst) | grep -v '\.ua$' > missing_"$key".txt
            comm -13 <(sort "${key}.lst") <(sort my-domains.lst) > presence_"$key".txt

            echo "‚ùóÔ∏è missing_${key}.txt: $(wc -l < missing_"$key".txt) —Å—Ç—Ä–æ–∫"
            echo "‚úÖ presence_${key}.txt: $(wc -l < presence_"$key".txt) —Å—Ç—Ä–æ–∫"
          done

          # –°–æ–±–∏—Ä–∞–µ–º –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          {
            for key in "${!SRC[@]}"; do
              echo "### Missing in $key ###"
              cat missing_"$key".txt
              echo
            done
          } > categories/Compared-Domains/missing-domains.txt

          {
            for key in "${!SRC[@]}"; do
              echo "### Present only in $key ###"
              cat presence_"$key".txt
              echo
            done
          } > categories/Compared-Domains/presence-domains.txt

          echo -e "\n‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
          echo "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ –∑–∞–¥–∞–Ω–∏—è:"
          ls -lh .

      - name: Commit and push all results
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add domains.lst domains-nekobox.lst my-domains.lst */*.lst missing_*.txt presence_*.txt categories/Compared-Domains/*.txt || true
          git commit -m "Debug: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ($(date +'%Y-%m-%d %H:%M'))" || echo "‚úì –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
          git push