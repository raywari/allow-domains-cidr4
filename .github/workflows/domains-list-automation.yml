name: Domains Automation and Comparison

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'
  push:
    paths:
      - 'domains.lst'
      - 'cidr4/summary/raw.lst'

jobs:
  process-and-compare-domains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y wget grep

      # --- Сортировка domains.lst ---
      - name: Sort domains.lst
        run: |
          if [ -f domains.lst ]; then
            LC_COLLATE=C sort -f -u domains.lst -o domains.lst
            echo "domains.lst отсортирован."
          else
            echo "Файл domains.lst отсутствует."
            exit 1
          fi

      # --- Фильтрация поддоменов (in-place) ---
      - name: Filter subdomains in-place
        run: |
          input_file="domains.lst"
          tmp=$(mktemp)
          mapfile -t domains < "$input_file"
          IFS=$'\n' sorted=($(printf '%s\n' "${domains[@]}" \
            | awk -F. '{print NF-1, $0}' \
            | sort -n \
            | cut -d' ' -f2-))
          unset IFS
          get_parents() {
            local domain=$1
            local parents=()
            local i=0
            while [[ $domain = *.* ]] && (( i < 99 )); do
              domain=${domain#*.}
              parents+=("$domain")
              ((i++))
            done
            echo "${parents[@]}"
          }
          declare -A kept
          for domain in "${sorted[@]}"; do
            parents=($(get_parents "$domain"))
            skip=false
            for p in "${parents[@]}"; do
              if [[ -n "${kept[$p]}" ]]; then
                skip=true
                break
              fi
            done
            if ! $skip; then
              echo "$domain" >> "$tmp"
              kept["$domain"]=1
            fi
          done
          sort -u "$tmp" -o "$input_file"
          rm "$tmp"
          echo "Поддомены до 99 уровней отфильтрованы (in-place)."

      # --- Генерация domains_nekobox.lst ---
      - name: Generate domains_nekobox.lst
        run: |
          input_file="domains.lst"
          output_file="domains_nekobox.lst"

          if [ ! -f "$input_file" ]; then
            echo "Файл $input_file не найден."
            exit 1
          fi

          sed 's/^/domain:/' "$input_file" > "$output_file"
          sort -u "$output_file" -o "$output_file"

          echo "Файл $output_file успешно создан."

      # --- Сравнение доменов ---
      - name: Prepare and compare domain lists
        run: |
          mkdir -p categories/Compared-Domains
          rm -f categories/Compared-Domains/missing-domains.txt categories/Compared-Domains/presence-domains.txt

          wget -q -O inside-raw.lst https://raw.githubusercontent.com/itdoginfo/allow-domains/main/Russia/inside-raw.lst

          cp domains.lst my-domains.lst

          while IFS= read -r domain; do
            if ! grep -q -x "$domain" my-domains.lst && \
               ! grep -q "^\\.${domain#.}" my-domains.lst && \
               ! awk -v d="$domain" 'BEGIN {n=split(d,a,"."); for(i=2;i<=n;i++) {parent=a[i]; for(j=i+1;j<=n;j++) parent=parent"."a[j]; if ($0 ~ "^\\."parent"$") exit 0}} END {exit 1}' my-domains.lst; then
              echo "$domain" >> categories/Compared-Domains/missing-domains.txt
            fi
          done < inside-raw.lst

          while IFS= read -r domain; do
            if ! grep -q -x "$domain" inside-raw.lst && \
               ! grep -q "^\\.${domain#.}" inside-raw.lst && \
               ! awk -v d="$domain" 'BEGIN {n=split(d,a,"."); for(i=2;i<=n;i++) {parent=a[i]; for(j=i+1;j<=n;j++) parent=parent"."a[j]; if ($0 ~ "^\\."parent"$") exit 0}} END {exit 1}' inside-raw.lst; then
              echo "$domain" >> categories/Compared-Domains/presence-domains.txt
            fi
          done < my-domains.lst

          sort -u categories/Compared-Domains/missing-domains.txt -o categories/Compared-Domains/missing-domains.txt
          sort -u categories/Compared-Domains/presence-domains.txt -o categories/Compared-Domains/presence-domains.txt

          echo "Сравнение доменных списков завершено."

      # --- Генерация domains-without-yt.lst ---
      - name: Generate domains-without-yt.lst excluding YouTube domains
        run: |
          input_file="domains.lst"
          exclude_file="categories/Services/youtube/youtube-domains.lst"
          output_file="domains-without-yt.lst"

          if [ ! -f "$input_file" ]; then
            echo "Файл $input_file не найден."
            exit 1
          fi

          if [ ! -f "$exclude_file" ]; then
            echo "Файл $exclude_file не найден."
            exit 1
          fi

          grep -vxFf "$exclude_file" "$input_file" | sort -u > "$output_file"

          echo "Файл $output_file успешно создан."

      # --- Коммит для .lst файлов ---
      - name: Commit and push .lst changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add domains.lst domains_nekobox.lst domains-without-yt.lst
          git commit -m "Обновление доменных .lst файлов" || echo "Нет изменений для коммита"
          git push

      # --- Коммит для Compared-Domains ---
      - name: Commit and push Compared-Domains changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add categories/Compared-Domains/*
          git commit -m "Автоматическое сравнение: $(date +'%Y-%m-%d')" || echo "Нет изменений для коммита"
          git push
